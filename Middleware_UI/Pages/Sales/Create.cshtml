@page
@model Middleware_UI.Pages.Sales.CreateModel
@{
    ViewData["Title"] = "Process New Sale";
}

<div class="container">
    <h1 class="mb-4">Process New Sale</h1>

    <div class="card">
        <div class="card-body">
            <form method="post" id="saleForm">
                <div class="mb-3">
                    <label asp-for="Sale.CustomerId" class="form-label">Customer</label>
                    <select asp-for="Sale.CustomerId" class="form-select" required>
                        <option value="">Select a customer</option>
                        @foreach (var customer in Model.Customers)
                        {
                            <option value="@customer.CustomerId">@customer.Name (@customer.CustomerId)</option>
                        }
                    </select>
                    <span asp-validation-for="Sale.CustomerId" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label">Sale Items</label>
                    <div id="saleItems">
                        <div class="sale-item mb-3 p-3 border rounded">
                            <div class="row">
                                <div class="col-md-3">
                                    <label class="form-label">Product</label>
                                    <select name="Sale.Items[0].ProductId" class="form-select product-select" required onchange="updateProductPrice(this)">
                                        <option value="">Select a product</option>
                                        @foreach (var product in Model.Products)
                                        {
                                            <option value="@product.Id" data-price="@product.Price">@product.Name</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Quantity</label>
                                    <input name="Sale.Items[0].Quantity" type="number" class="form-control item-quantity" required min="1" onchange="calculateItemTotal(this)" />
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Unit Price</label>
                                    <input name="Sale.Items[0].UnitPrice" type="number" step="0.01" class="form-control item-unit-price" required min="0" readonly />
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Total Price</label>
                                    <input name="Sale.Items[0].TotalPrice" type="number" step="0.01" class="form-control item-total-price" required min="0" readonly />
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col">
                                    <button type="button" class="btn btn-danger btn-sm" onclick="removeSaleItem(this)" style="display: none;">Remove Item</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-secondary" onclick="addSaleItem()">Add Item</button>
                </div>

                <div class="mb-3">
                    <label asp-for="Sale.TotalAmount" class="form-label">Total Amount</label>
                    <input asp-for="Sale.TotalAmount" type="number" step="0.01" class="form-control" required min="0" readonly />
                    <span asp-validation-for="Sale.TotalAmount" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Process Sale</button>
                    <a href="/" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let itemCount = 1;

        function addSaleItem() {
            const template = `
                <div class="sale-item mb-3 p-3 border rounded">
                    <div class="row">
                        <div class="col-md-3">
                            <label class="form-label">Product</label>
                            <select name="Sale.Items[${itemCount}].ProductId" class="form-select product-select" required onchange="updateProductPrice(this)">
                                <option value="">Select a product</option>
                                @foreach (var product in Model.Products)
                                {
                                    <option value="@product.Id" data-price="@product.Price">@product.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Quantity</label>
                            <input name="Sale.Items[${itemCount}].Quantity" type="number" class="form-control item-quantity" required min="1" onchange="calculateItemTotal(this)" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Unit Price</label>
                            <input name="Sale.Items[${itemCount}].UnitPrice" type="number" step="0.01" class="form-control item-unit-price" required min="0" readonly />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Total Price</label>
                            <input name="Sale.Items[${itemCount}].TotalPrice" type="number" step="0.01" class="form-control item-total-price" required min="0" readonly />
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col">
                            <button type="button" class="btn btn-danger btn-sm" onclick="removeSaleItem(this)">Remove Item</button>
                        </div>
                    </div>
                </div>
            `;
            document.getElementById('saleItems').insertAdjacentHTML('beforeend', template);
            itemCount++;
            updateRemoveButtons();
        }

        function removeSaleItem(button) {
            button.closest('.sale-item').remove();
            updateRemoveButtons();
            calculateTotalAmount();
        }

        function updateRemoveButtons() {
            const items = document.querySelectorAll('.sale-item');
            items.forEach((item, index) => {
                const removeButton = item.querySelector('.btn-danger');
                removeButton.style.display = items.length > 1 ? 'inline-block' : 'none';
            });
        }

        function updateProductPrice(select) {
            const itemDiv = select.closest('.sale-item');
            const selectedOption = select.options[select.selectedIndex];
            const price = selectedOption.getAttribute('data-price') || '0';
            itemDiv.querySelector('.item-unit-price').value = price;
            calculateItemTotal(itemDiv.querySelector('.item-quantity'));
        }

        function calculateItemTotal(input) {
            const itemDiv = input.closest('.sale-item');
            const quantity = parseFloat(itemDiv.querySelector('.item-quantity').value) || 0;
            const unitPrice = parseFloat(itemDiv.querySelector('.item-unit-price').value) || 0;
            const totalPrice = quantity * unitPrice;
            itemDiv.querySelector('.item-total-price').value = totalPrice.toFixed(2);
            calculateTotalAmount();
        }

        function calculateTotalAmount() {
            const totalPrices = Array.from(document.querySelectorAll('.item-total-price'))
                .map(input => parseFloat(input.value) || 0);
            const totalAmount = totalPrices.reduce((sum, price) => sum + price, 0);
            document.querySelector('input[name="Sale.TotalAmount"]').value = totalAmount.toFixed(2);
        }

        // Initialize the form
        document.addEventListener('DOMContentLoaded', function() {
            updateRemoveButtons();
        });
    </script>
} 